{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red173\green169\blue32;\red88\green118\blue71;\red133\green96\blue154;\red254\green187\blue91;\red86\green132\blue173;
}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c67843\c66275\c12549;\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c33725\c51765\c67843;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 package \cf4 com.lincbit.web.utils\cf2 ;\
\
import \cf4 com.lincbit.dao.mapper.UserInfoRowMapper\cf2 ;\
import \cf4 com.lincbit.dao.mapper.UserLogRowMapper\cf2 ;\
import \cf4 com.lincbit.dao.mapper.UserRowMapper\cf2 ;\
import \cf4 com.lincbit.model.User\cf2 ;\
import \cf4 com.lincbit.model.UserInfo\cf2 ;\
import \cf4 com.lincbit.model.UserLog\cf2 ;\
import \cf4 com.lincbit.web.BaseResource\cf2 ;\
import \cf4 com.sun.jersey.api.view.Viewable\cf2 ;\
import \cf4 org.springframework.context.annotation.\cf5 Scope\cf2 ;\
import \cf4 org.springframework.stereotype.\cf5 Component\cf2 ;\
\
import \cf4 javax.ws.rs.\cf5 GET\cf2 ;\
import \cf4 javax.ws.rs.\cf5 Path\cf2 ;\
import \cf4 javax.ws.rs.\cf5 Produces\cf2 ;\
import \cf4 javax.ws.rs.core.MediaType\cf2 ;\
import \cf4 javax.ws.rs.core.Response\cf2 ;\
import \cf4 java.net.URI\cf2 ;\
import \cf4 java.util.List\cf2 ;\
\
\cf5 @Path\cf4 (\cf6 "/text"\cf4 )\
\cf5 @Component\
@Scope\
\cf2 public class \cf4 TextResource \cf2 extends \cf4 BaseResource \{\
    \cf5 @GET\
    @Path\cf4 (\cf6 "account"\cf4 )\
    \cf5 @Produces\cf4 (MediaType.
\f1\i \cf7 TEXT_HTML
\f0\i0 \cf4 )\
    \cf2 public \cf4 Response \cf8 get\cf4 () \cf2 throws \cf4 Throwable \{\
\
        User user = getSessionUser()\cf2 ;\
        if \cf4 (user == \cf2 null\cf4 ) \{\
            \cf2 return \cf4 Response.
\f1\i seeOther
\f0\i0 (\cf2 new \cf4 URI(\cf6 "/"\cf4 )).build()\cf2 ;\
        \cf4 \}\
\
        user = \cf7 entityDao\cf4 .findOne(User.
\f1\i \cf7 TABLE_NAME
\f0\i0 \cf2 , \cf6 "email"\cf2 , \cf4 user.getEmail()\cf2 , \cf4 UserRowMapper.
\f1\i getInstance
\f0\i0 ())\cf2 ;\
        \cf7 request\cf4 .setAttribute(\cf6 "user"\cf2 , \cf4 user)\cf2 ;\
        \cf4 UserInfo userInfo = \cf7 entityDao\cf4 .findOne(UserInfo.
\f1\i \cf7 TABLE_NAME
\f0\i0 \cf2 , \cf6 "userId"\cf2 , \cf4 user.getId()\cf2 , \cf4 UserInfoRowMapper.
\f1\i getInstance
\f0\i0 ())\cf2 ;\
        \cf7 request\cf4 .setAttribute(\cf6 "userInfo"\cf2 , \cf4 userInfo)\cf2 ;\
        \cf4 List<UserLog> userLogs = \cf7 entityDao\cf4 .find(UserLog.
\f1\i \cf7 TABLE_NAME
\f0\i0 \cf2 , \cf6 "type"\cf2 , \cf6 "1"\cf2 , \cf4 UserLogRowMapper.
\f1\i getInstance
\f0\i0 ()\cf2 , \cf9 1\cf2 , \cf9 5\cf2 , \cf6 "desc"\cf4 )\cf2 ;\
        \cf7 request\cf4 .setAttribute(\cf6 "userLogs"\cf2 , \cf4 userLogs)\cf2 ;\
\
        return \cf4 Response.
\f1\i ok
\f0\i0 (\cf2 new \cf4 Viewable(\cf6 "account"\cf4 )).build()\cf2 ;\
    \cf4 \}\
\
    \cf5 @GET\
    @Path\cf4 (\cf6 "record"\cf4 )\
    \cf5 @Produces\cf4 (MediaType.
\f1\i \cf7 TEXT_HTML
\f0\i0 \cf4 )\
    \cf2 public  \cf4 Response \cf8 record\cf4 () \{\
\
        \cf2 return \cf4 Response.
\f1\i ok
\f0\i0 (\cf2 new \cf4 Viewable(\cf6 "a"\cf4 )).build()\cf2 ;\
\
    \cf4 \}\
\
\
\
\
\
\}\
\
}